import type { KeyPairJwk } from '@tbd54566975/crypto';
import type { DidDocument, VerificationMethodWithPrivateKeyJwk, ServiceEndpoint } from './types.js';
export type ParsedDid = {
    method: string;
    id: string;
};
export declare function parseDid(did: string): ParsedDid;
export declare function createVerificationMethodWithPrivateKeyJwk(id: string, keyPairJwk: KeyPairJwk): VerificationMethodWithPrivateKeyJwk;
export type GetServicesOptions = {
    id?: string;
    type?: string;
};
/**
 * returns services from the provided DID Document based on the filter. will return all services if no filter is provided
 * @param didDocument the did document to search
 * @param options search filter
 * @returns matched services
 */
export declare function getServices(didDocument: DidDocument, options?: GetServicesOptions): ServiceEndpoint[];
export declare const DID_REGEX: RegExp;
//# sourceMappingURL=utils.d.ts.map