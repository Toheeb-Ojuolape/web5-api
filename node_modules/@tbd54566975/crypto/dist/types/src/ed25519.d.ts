import type { KeyPair, PublicKeyJwk, PrivateKeyJwk, KeyPairJwk } from './types.js';
export declare function generateKeyPair(): KeyPair;
export declare function deriveX25519KeyPair(ed25519KeyPair: KeyPair): KeyPair;
export type JwkOverrides = {
    crv: 'Ed25519' | 'X25519';
};
export declare function keyPairToJwk(keyPair: KeyPair, kid: string, overrides?: JwkOverrides): KeyPairJwk;
export type SignOptions = {
    /** the data being signed */
    payload: Uint8Array;
    /** the key being used to sign */
    privateKeyJwk: PrivateKeyJwk;
};
export declare function sign(options: SignOptions): Uint8Array;
export type VerifyOptions = {
    /** the signature to verify */
    signature: Uint8Array;
    /** the payload that was signed */
    payload: Uint8Array;
    /** the key to verify the signature with */
    publicKeyJwk: PublicKeyJwk;
};
export declare function verify(options: VerifyOptions): Promise<boolean>;
//# sourceMappingURL=ed25519.d.ts.map