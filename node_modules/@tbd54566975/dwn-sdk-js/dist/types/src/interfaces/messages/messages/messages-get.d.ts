import type { SignatureInput } from '../../../jose/jws/general/types.js';
import type { MessagesGetMessage } from '../types.js';
import { Message } from '../../../core/message.js';
export declare type MessagesGetOptions = {
    messageCids: string[];
    authorizationSignatureInput: SignatureInput;
};
export declare class MessagesGet extends Message<MessagesGetMessage> {
    static parse(message: MessagesGetMessage): Promise<MessagesGet>;
    static create(options: MessagesGetOptions): Promise<MessagesGet>;
    /**
     * validates the provided cids
     * @param messageCids - the cids in question
     * @throws {Error} if an invalid cid is found.
     */
    private static validateMessageCids;
}
//# sourceMappingURL=messages-get.d.ts.map