import type { DataStore } from '../../store/data-store.js';
import type { EventLog } from '../../event-log/event-log.js';
import type { MessageStore } from '../../store/message-store.js';
import type { TimestampedMessage } from '../../core/types.js';
/**
 * Deletes all messages in `existingMessages` that are older than the `comparedToMessage` in the given tenant,
 * but keep the initial write write for future processing by ensuring its `isLatestBaseState` index is "false".
 */
export declare function deleteAllOlderMessagesButKeepInitialWrite(tenant: string, existingMessages: TimestampedMessage[], comparedToMessage: TimestampedMessage, messageStore: MessageStore, dataStore: DataStore, eventLog: EventLog): Promise<void>;
//# sourceMappingURL=records-interface.d.ts.map