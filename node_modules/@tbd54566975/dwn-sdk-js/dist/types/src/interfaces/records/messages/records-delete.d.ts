import type { RecordsDeleteMessage } from '../types.js';
import { Message } from '../../../core/message.js';
import type { SignatureInput } from '../../../jose/jws/general/types.js';
export declare type RecordsDeleteOptions = {
    recordId: string;
    dateModified?: string;
    authorizationSignatureInput: SignatureInput;
};
export declare class RecordsDelete extends Message<RecordsDeleteMessage> {
    static parse(message: RecordsDeleteMessage): Promise<RecordsDelete>;
    /**
     * Creates a RecordsDelete message.
     * @param options.recordId If `undefined`, will be auto-filled as a originating message as convenience for developer.
     * @param options.dateModified If `undefined`, it will be auto-filled with current time.
     */
    static create(options: RecordsDeleteOptions): Promise<RecordsDelete>;
    authorize(tenant: string): Promise<void>;
}
//# sourceMappingURL=records-delete.d.ts.map