/// <reference types="readable-stream" />
import type { EventLog } from '../../../event-log/event-log.js';
import type { MethodHandler } from '../../types.js';
import type { ProtocolsConfigureMessage } from '../types.js';
import type { DataStore, DidResolver, MessageStore } from '../../../index.js';
import { MessageReply } from '../../../core/message-reply.js';
export declare class ProtocolsConfigureHandler implements MethodHandler {
    private didResolver;
    private messageStore;
    private dataStore;
    private eventLog;
    constructor(didResolver: DidResolver, messageStore: MessageStore, dataStore: DataStore, eventLog: EventLog);
    handle({ tenant, message, dataStream }: {
        tenant: string;
        message: ProtocolsConfigureMessage;
        dataStream: _Readable.Readable;
    }): Promise<MessageReply>;
    private static constructProtocolsConfigureIndexes;
}
//# sourceMappingURL=protocols-configure.d.ts.map