import type { SignatureInput } from '../../../jose/jws/general/types.js';
import type { ProtocolDefinition, ProtocolsConfigureMessage } from '../types.js';
import { Message } from '../../../core/message.js';
export declare type ProtocolsConfigureOptions = {
    dateCreated?: string;
    definition: ProtocolDefinition;
    authorizationSignatureInput: SignatureInput;
};
export declare class ProtocolsConfigure extends Message<ProtocolsConfigureMessage> {
    static parse(message: ProtocolsConfigureMessage): Promise<ProtocolsConfigure>;
    static create(options: ProtocolsConfigureOptions): Promise<ProtocolsConfigure>;
    private static validateDefinitionNormalized;
    private static normalizeDefinition;
}
//# sourceMappingURL=protocols-configure.d.ts.map