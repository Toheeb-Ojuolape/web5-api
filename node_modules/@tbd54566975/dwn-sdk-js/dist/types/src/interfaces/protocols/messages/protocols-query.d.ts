import type { SignatureInput } from '../../../jose/jws/general/types.js';
import type { ProtocolsQueryFilter, ProtocolsQueryMessage } from '../types.js';
import { Message } from '../../../core/message.js';
export declare type ProtocolsQueryOptions = {
    dateCreated?: string;
    filter?: ProtocolsQueryFilter;
    authorizationSignatureInput: SignatureInput;
};
export declare class ProtocolsQuery extends Message<ProtocolsQueryMessage> {
    static parse(message: ProtocolsQueryMessage): Promise<ProtocolsQuery>;
    static create(options: ProtocolsQueryOptions): Promise<ProtocolsQuery>;
    private static normalizeFilter;
}
//# sourceMappingURL=protocols-query.d.ts.map