import type { DataStore } from './store/data-store.js';
import type { EventLog } from './event-log/event-log.js';
import type { MessageStore } from './store/message-store.js';
import type { Readable } from 'readable-stream';
import type { TenantGate } from './core/tenant-gate.js';
import type { MessagesGetMessage, MessagesGetReply } from './interfaces/messages/types.js';
import type { RecordsReadMessage, RecordsReadReply, RecordsWriteMessage } from './interfaces/records/types.js';
import { DidResolver } from './did/did-resolver.js';
import { MessageReply } from './core/message-reply.js';
export declare class Dwn {
    private methodHandlers;
    private didResolver;
    private messageStore;
    private dataStore;
    private eventLog;
    private tenantGate;
    private constructor();
    /**
     * Creates an instance of the DWN.
     */
    static create(config?: DwnConfig): Promise<Dwn>;
    private open;
    close(): Promise<void>;
    /**
     * Processes the given DWN message and returns with a reply.
     * @param tenant The tenant DID to route the given message to.
     */
    processMessage(tenant: string, rawMessage: any, dataStream?: Readable): Promise<MessageReply>;
    /**
     * Handles a `RecordsRead` message.
     */
    handleRecordsRead(tenant: string, message: RecordsReadMessage): Promise<RecordsReadReply>;
    /**
     * Handles a `MessagesGet` message.
     */
    handleMessagesGet(tenant: string, message: MessagesGetMessage): Promise<MessagesGetReply>;
    /**
     * Privileged method for writing a pruned initial `RecordsWrite` to a DWN without needing to supply associated data.
     */
    synchronizePrunedInitialRecordsWrite(tenant: string, message: RecordsWriteMessage): Promise<MessageReply>;
    /**
     * Common checks for handlers.
     */
    private preprocessingChecks;
    dump(): Promise<void>;
}
export declare type DwnConfig = {
    didResolver?: DidResolver;
    messageStore?: MessageStore;
    dataStore?: DataStore;
    tenantGate?: TenantGate;
    eventLog?: EventLog;
};
//# sourceMappingURL=dwn.d.ts.map