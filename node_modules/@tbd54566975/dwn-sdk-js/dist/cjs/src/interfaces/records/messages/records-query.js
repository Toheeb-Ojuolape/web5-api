"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RecordsQuery = exports.DateSort = void 0;
var time_js_1 = require("../../../utils/time.js");
var message_js_1 = require("../../../core/message.js");
var object_js_1 = require("../../../utils/object.js");
var auth_js_1 = require("../../../core/auth.js");
var message_js_2 = require("../../../core/message.js");
var url_js_1 = require("../../../utils/url.js");
var DateSort;
(function (DateSort) {
    DateSort["CreatedAscending"] = "createdAscending";
    DateSort["CreatedDescending"] = "createdDescending";
    DateSort["PublishedAscending"] = "publishedAscending";
    DateSort["PublishedDescending"] = "publishedDescending";
})(DateSort = exports.DateSort || (exports.DateSort = {}));
var RecordsQuery = /** @class */ (function (_super) {
    __extends(RecordsQuery, _super);
    function RecordsQuery() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    RecordsQuery.parse = function (message) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, (0, auth_js_1.validateAuthorizationIntegrity)(message)];
                    case 1:
                        _a.sent();
                        if (message.descriptor.filter.protocol !== undefined) {
                            (0, url_js_1.validateProtocolUrlNormalized)(message.descriptor.filter.protocol);
                        }
                        if (message.descriptor.filter.schema !== undefined) {
                            (0, url_js_1.validateSchemaUrlNormalized)(message.descriptor.filter.schema);
                        }
                        return [2 /*return*/, new RecordsQuery(message)];
                }
            });
        });
    };
    RecordsQuery.create = function (options) {
        var _a;
        return __awaiter(this, void 0, void 0, function () {
            var descriptor, authorization, message;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        descriptor = {
                            interface: message_js_2.DwnInterfaceName.Records,
                            method: message_js_2.DwnMethodName.Query,
                            dateCreated: (_a = options.dateCreated) !== null && _a !== void 0 ? _a : (0, time_js_1.getCurrentTimeInHighPrecision)(),
                            filter: RecordsQuery.normalizeFilter(options.filter),
                            dateSort: options.dateSort
                        };
                        // delete all descriptor properties that are `undefined` else the code will encounter the following IPLD issue when attempting to generate CID:
                        // Error: `undefined` is not supported by the IPLD Data Model and cannot be encoded
                        (0, object_js_1.removeUndefinedProperties)(descriptor);
                        return [4 /*yield*/, message_js_1.Message.signAsAuthorization(descriptor, options.authorizationSignatureInput)];
                    case 1:
                        authorization = _b.sent();
                        message = { descriptor: descriptor, authorization: authorization };
                        message_js_1.Message.validateJsonSchema(message);
                        return [2 /*return*/, new RecordsQuery(message)];
                }
            });
        });
    };
    RecordsQuery.prototype.authorize = function (tenant) {
        return __awaiter(this, void 0, void 0, function () {
            var recipient;
            return __generator(this, function (_a) {
                // DWN owner can do any query
                if (this.author === tenant) {
                    return [2 /*return*/];
                }
                recipient = this.message.descriptor.filter.recipient;
                if (recipient !== undefined) {
                    // make sure the recipient is the author
                    if (recipient !== this.author) {
                        throw new Error("".concat(this.author, " is not allowed to query records intended for another recipient: ").concat(recipient));
                    }
                }
                return [2 /*return*/];
            });
        });
    };
    RecordsQuery.convertFilter = function (filter) {
        var filterCopy = __assign({}, filter);
        var dateCreated = filterCopy.dateCreated;
        var rangeFilter = undefined;
        if (dateCreated !== undefined) {
            if (dateCreated.to !== undefined && dateCreated.from !== undefined) {
                rangeFilter = {
                    gte: dateCreated.from,
                    lt: dateCreated.to,
                };
            }
            else if (dateCreated.to !== undefined) {
                rangeFilter = {
                    lt: dateCreated.to,
                };
            }
            else if (dateCreated.from !== undefined) {
                rangeFilter = {
                    gte: dateCreated.from,
                };
            }
        }
        if (rangeFilter) {
            filterCopy.dateCreated = rangeFilter;
        }
        return filterCopy;
    };
    RecordsQuery.normalizeFilter = function (filter) {
        var protocol;
        if (filter.protocol === undefined) {
            protocol = undefined;
        }
        else {
            protocol = (0, url_js_1.normalizeProtocolUrl)(filter.protocol);
        }
        var schema;
        if (filter.schema === undefined) {
            schema = undefined;
        }
        else {
            schema = (0, url_js_1.normalizeSchemaUrl)(filter.schema);
        }
        return __assign(__assign({}, filter), { protocol: protocol, schema: schema });
    };
    return RecordsQuery;
}(message_js_1.Message));
exports.RecordsQuery = RecordsQuery;
//# sourceMappingURL=records-query.js.map