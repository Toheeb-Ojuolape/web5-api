"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StorageController = void 0;
var dwn_constant_js_1 = require("../core/dwn-constant.js");
var message_js_1 = require("../core/message.js");
var index_js_1 = require("../index.js");
/**
 * A class that provides an abstraction for the usage of MessageStore, DataStore, and EventLog.
 */
var StorageController = /** @class */ (function () {
    function StorageController() {
    }
    StorageController.query = function (messageStore, dataStore, tenant, filter) {
        return __awaiter(this, void 0, void 0, function () {
            var messages, messages_1, messages_1_1, message, dataCid, dataSize, messageCid, result, dataBytes, e_1_1;
            var e_1, _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0: return [4 /*yield*/, messageStore.query(tenant, filter)];
                    case 1:
                        messages = (_b.sent());
                        _b.label = 2;
                    case 2:
                        _b.trys.push([2, 9, 10, 11]);
                        messages_1 = __values(messages), messages_1_1 = messages_1.next();
                        _b.label = 3;
                    case 3:
                        if (!!messages_1_1.done) return [3 /*break*/, 8];
                        message = messages_1_1.value;
                        dataCid = message.descriptor.dataCid;
                        dataSize = message.descriptor.dataSize;
                        if (!(dataCid !== undefined && dataSize <= dwn_constant_js_1.DwnConstant.maxDataSizeAllowedToBeEncoded)) return [3 /*break*/, 7];
                        return [4 /*yield*/, message_js_1.Message.getCid(message)];
                    case 4:
                        messageCid = _b.sent();
                        return [4 /*yield*/, dataStore.get(tenant, messageCid, dataCid)];
                    case 5:
                        result = _b.sent();
                        if (!result) return [3 /*break*/, 7];
                        return [4 /*yield*/, index_js_1.DataStream.toBytes(result.dataStream)];
                    case 6:
                        dataBytes = _b.sent();
                        message.encodedData = index_js_1.Encoder.bytesToBase64Url(dataBytes);
                        _b.label = 7;
                    case 7:
                        messages_1_1 = messages_1.next();
                        return [3 /*break*/, 3];
                    case 8: return [3 /*break*/, 11];
                    case 9:
                        e_1_1 = _b.sent();
                        e_1 = { error: e_1_1 };
                        return [3 /*break*/, 11];
                    case 10:
                        try {
                            if (messages_1_1 && !messages_1_1.done && (_a = messages_1.return)) _a.call(messages_1);
                        }
                        finally { if (e_1) throw e_1.error; }
                        return [7 /*endfinally*/];
                    case 11: return [2 /*return*/, messages];
                }
            });
        });
    };
    StorageController.delete = function (messageStore, dataStore, tenant, message) {
        return __awaiter(this, void 0, void 0, function () {
            var messageCid;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, message_js_1.Message.getCid(message)];
                    case 1:
                        messageCid = _a.sent();
                        if (!(message.descriptor.dataCid !== undefined)) return [3 /*break*/, 3];
                        return [4 /*yield*/, dataStore.delete(tenant, messageCid, message.descriptor.dataCid)];
                    case 2:
                        _a.sent();
                        _a.label = 3;
                    case 3: return [4 /*yield*/, messageStore.delete(tenant, messageCid)];
                    case 4:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    return StorageController;
}());
exports.StorageController = StorageController;
//# sourceMappingURL=storage-controller.js.map